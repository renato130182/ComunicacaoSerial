/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author renato.soares
 */
import com.pi4j.io.gpio.*;
import com.pi4j.io.gpio.event.GpioPinDigitalStateChangeEvent;
import com.pi4j.io.gpio.event.GpioPinListenerDigital;
import com.pi4j.platform.Platform;
import com.pi4j.platform.PlatformAlreadyAssignedException;
import com.pi4j.platform.PlatformManager;
import java.awt.Color;
import java.text.DecimalFormat;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;



public class Main extends javax.swing.JFrame {

            // TODO add your handling code here:
    
       
       
    final GpioController gpio = GpioFactory.getInstance();
    GpioPinDigitalOutput led = gpio.provisionDigitalOutputPin(OrangePiPin.GPIO_15);
    GpioPinDigitalInput motor = gpio.provisionDigitalInputPin(OrangePiPin.GPIO_00,PinPullResistance.PULL_DOWN);
    GpioPinDigitalInput pulse = gpio.provisionDigitalInputPin(OrangePiPin.GPIO_25,PinPullResistance.PULL_UP);
    DecimalFormat decimal = new DecimalFormat("#,###.00");
    long inicialTime;
    int interval = 1000;
    int intervalFrames=33; //30 FPS
    Timer timer = new Timer();
    Timer TimerFrames = new Timer();
    long pulsos;
    long pulsosPorSegundo;
    double metragem;
    int rpm;
    int pulsosPorVolta;
    double centimetrosPorPulso;
    public Main() {
        

        initComponents();
        ResetarIOs();
        pulsos = 0;
        pulsosPorSegundo = 0;
        pulsosPorVolta=Integer.parseInt(txtPulsosPorVolta.getText());
        centimetrosPorPulso=Double.parseDouble(txtCentimetrosPorPulso.getText());
        //pulsosPorVolta=48;
        System.out.println("tempo iniciado ");
        motor.setShutdownOptions(Boolean.TRUE);
        motor.addListener(new GpioPinListenerDigital() {
            @Override
            public void handleGpioPinDigitalStateChangeEvent(GpioPinDigitalStateChangeEvent event) {             
                System.out.println(" --> Motor Ligado " + event.getPin() + " = " + event.getState());
                int state = event.getState().getValue();
                if(state == 1){
                    jLabel2.setText("Motor Ligado");
                    jLabel2.setForeground(Color.red);
                    inicialTime = System.currentTimeMillis();
                }else{
                    jLabel2.setText("Motor Desligado");
                    jLabel2.setForeground(Color.blue);
                    ApagarLed();
                    System.out.println("Tempo Rodando: " + Long.toString((System.currentTimeMillis() - inicialTime)/1000) + " Segundos" );
                }      
            }
         });
        pulse.setShutdownOptions(Boolean.TRUE);
        pulse.addListener(new GpioPinListenerDigital() {
            @Override
            public void handleGpioPinDigitalStateChangeEvent(GpioPinDigitalStateChangeEvent event) {                
                pulsos = pulsos + 1;                
                pulsosPorSegundo = pulsosPorSegundo+1;
                metragem=metragem+1;
                
            }
        });
        timer.schedule(new TimerTask() {
            @Override
            public void run() {

                //To change body of generated methods, choose Tools | Templates.
                System.out.println("Pulsos Totais: " + Long.toString(pulsos) + ", por Segundo: " + Long.toString(pulsosPorSegundo));                     
                txtPulsosPorSegundo.setText(Long.toString(pulsosPorSegundo));
                rpm= (int)(pulsosPorSegundo/pulsosPorVolta)*60;            
                //Calculos acima desta linha
                pulsosPorSegundo = 0;
                return;
            }
        }, interval,interval);
        
        TimerFrames.schedule(new TimerTask() {
            @Override
            public void run() {
                txtPulsosTotais.setText(Long.toString(pulsos));                                               
                txtRpm.setText(Integer.toString(rpm));                
                txtMetragem.setText(String.format("%.2f",((metragem*centimetrosPorPulso)/100)));                
            }
        },intervalFrames,intervalFrames);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        LibMotor = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        txtPulsosTotais = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPulsosPorSegundo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtRpm = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        BtnZerarMetragem = new javax.swing.JButton();
        txtPulsosPorVolta = new javax.swing.JFormattedTextField();
        txtCentimetrosPorPulso = new javax.swing.JFormattedTextField();
        txtMetragem = new javax.swing.JFormattedTextField();

        jScrollPane1.setViewportView(jTree1);

        jLabel8.setText("jLabel8");

        jLabel11.setText("jLabel11");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setType(java.awt.Window.Type.UTILITY);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel1.setText("Testador de Solução V1.0");

        LibMotor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        LibMotor.setText("Liberar Motor");
        LibMotor.setToolTipText("");
        LibMotor.setName("LiberaMotor"); // NOI18N
        LibMotor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LibMotorActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel2.setText("Status Motor");

        jLabel3.setText("Pulsos Totais:");

        txtPulsosTotais.setEditable(false);
        txtPulsosTotais.setText("0");
        txtPulsosTotais.setName("txtPulsosTotais"); // NOI18N

        jLabel4.setText("Pulsos por Segundo:");

        txtPulsosPorSegundo.setEditable(false);
        txtPulsosPorSegundo.setText("0");
        txtPulsosPorSegundo.setName("txtPulsosPorSegundo"); // NOI18N

        jLabel5.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Contador de Pulsos");

        jLabel6.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Parametros do pulsador");

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Pulsos por volta:");

        jLabel9.setText("Centimetros x Pulso:");

        jLabel10.setText("RPM:");

        txtRpm.setEditable(false);
        txtRpm.setText("0");

        jLabel12.setText("Metragem:");

        BtnZerarMetragem.setText("Reiniciar Contadores");
        BtnZerarMetragem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnZerarMetragemActionPerformed(evt);
            }
        });

        txtPulsosPorVolta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtPulsosPorVolta.setText("48");
        txtPulsosPorVolta.setToolTipText("Reinicie os contadores paras as alterações surtirem efeito.");
        txtPulsosPorVolta.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        txtCentimetrosPorPulso.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtCentimetrosPorPulso.setText("0.2");
        txtCentimetrosPorPulso.setToolTipText("Reinicie os contadores paras as alterações surtirem efeito.");

        txtMetragem.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(LibMotor)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(118, 118, 118)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPulsosTotais, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPulsosPorSegundo)))
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(4, 4, 4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtPulsosPorVolta, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtCentimetrosPorPulso, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtRpm, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtMetragem, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(BtnZerarMetragem)))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LibMotor)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPulsosTotais, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtPulsosPorSegundo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(txtPulsosPorVolta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCentimetrosPorPulso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtRpm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(BtnZerarMetragem)
                    .addComponent(txtMetragem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void LibMotorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LibMotorActionPerformed
        if(led.isHigh()){
            ApagarLed();
        }else{
            AcenderLed();
        }
        
    }//GEN-LAST:event_LibMotorActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        led.low();
        gpio.shutdown();
        System.out.println("Fechando Form");
    }//GEN-LAST:event_formWindowClosing

    private void BtnZerarMetragemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnZerarMetragemActionPerformed
        // TODO add your handling code here:
        metragem=0.0;
        pulsosPorVolta=Integer.parseInt(txtPulsosPorVolta.getText());
        centimetrosPorPulso=Double.parseDouble(txtCentimetrosPorPulso.getText());
    }//GEN-LAST:event_BtnZerarMetragemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])throws InterruptedException, PlatformAlreadyAssignedException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
         java.awt.EventQueue.invokeLater(() -> {
            try {
                PlatformManager.setPlatform(Platform.ORANGEPI);                
                new Main().setVisible(true);
            } catch (PlatformAlreadyAssignedException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        });
    
    }
       
    private void ApagarLed(){
        led.low();
        System.out.println("Apagou Led");
        LibMotor.setText("Liberar Motor");
    }
    private void AcenderLed(){
        led.high();
        System.out.println("Acender Led");
        LibMotor.setText("Bloquear Motor");
    }
    private void ResetarIOs(){
        led.low();
        jLabel2.setText("Motor Desligado");
        jLabel2.setForeground(Color.blue);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnZerarMetragem;
    private javax.swing.JButton LibMotor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTree jTree1;
    private javax.swing.JFormattedTextField txtCentimetrosPorPulso;
    private javax.swing.JFormattedTextField txtMetragem;
    private javax.swing.JTextField txtPulsosPorSegundo;
    private javax.swing.JFormattedTextField txtPulsosPorVolta;
    private javax.swing.JTextField txtPulsosTotais;
    private javax.swing.JTextField txtRpm;
    // End of variables declaration//GEN-END:variables
}
