/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Serial.SerialTxRx;
import controller.LogErro;
import dao.ConfigSerialDAO;
import java.awt.HeadlessException;
import java.io.IOException;
import javax.swing.JOptionPane;
import model.ConfigSerialPort;
import testecomunicaoserial.TesteComunicaoSerial;

/**
 *
 * @author renato.soares
 */
public class JFConfigSerialCon extends javax.swing.JFrame {
    SerialTxRx serialPorts = new SerialTxRx();
    LogErro erro = new LogErro();
    ConfigSerialDAO dao = new ConfigSerialDAO();
    private String configName;
    SerialTxRx con;
    
    /**
     * Creates new form JFConfigSerialRFID
     * @param con
     */
    public JFConfigSerialCon(SerialTxRx con) {
        initComponents();
        this.con = (con!=null) ? con : new SerialTxRx();
        CarregaPortasDisponiveis();        
    }
    
    private void CarregaPortasDisponiveis(){
        try {                    
            cmbPorta.removeAllItems();

            String portas[] = serialPorts.BuscarPortas();       
            for (String porta : portas) {
                if (porta != null) {
                    cmbPorta.addItem(porta);
                }
            }
           if(cmbPorta.getItemCount()>0){
               jButtonSalvar.setEnabled(true);
            }else{
              jButtonSalvar.setEnabled(false);
           }           
           //serialPorts.close();
        } catch (Exception e) {
            e.printStackTrace();
            erro.gravaErro(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        cmbBaudRate = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cmbBitsDados = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cmbParidade = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cmbBitParada = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        cmbControleFluxo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButtonSalvar = new javax.swing.JButton();
        cmbPorta = new javax.swing.JComboBox<>();
        jBDesconectar = new javax.swing.JButton();
        jBManutencao = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configurar Serial Micrometro");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(204, 255, 255));
        setLocationByPlatform(true);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Configurações da comunicação serial micrometro:");

        jLabel2.setText("Portas disponíveis:");

        cmbBaudRate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "110", "300", "1200", "2400", "4800", "9600", "19200", "38400", "56700", "115200" }));
        cmbBaudRate.setSelectedIndex(5);

        jLabel4.setText("Baud Rate:");

        cmbBitsDados.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "5", "6", "7", "8" }));
        cmbBitsDados.setSelectedIndex(3);

        jLabel5.setText("Bits de dados:");

        cmbParidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nenhum", "Ímpar", "Par", "Marca", "Espaço" }));
        cmbParidade.setToolTipText("");

        jLabel6.setText("Paridade:");

        cmbBitParada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "1.5" }));

        jLabel7.setText("Bits de paradas:");

        cmbControleFluxo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nenhum", "RTC/CTS in", "RTS/CTS out", "XON/XOFF in", "XON/XOFF out" }));
        cmbControleFluxo.setToolTipText("");

        jLabel3.setText("Controle de fluxo:");

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jBDesconectar.setText("Desconectar");
        jBDesconectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDesconectarActionPerformed(evt);
            }
        });

        jBManutencao.setText("Manutenção");
        jBManutencao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBManutencaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cmbPorta, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cmbControleFluxo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbParidade, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbBitParada, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbBitsDados, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cmbBaudRate, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jBDesconectar, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                    .addComponent(jBManutencao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addComponent(jButtonSalvar))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbBaudRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbBitsDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jBDesconectar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbParidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jBManutencao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbBitParada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbControleFluxo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonSalvar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        // TODO add your handling code here:
        try {                    
            boolean nova,regs;
            ConfigSerialPort conn = new ConfigSerialPort();  
            conn = dao.buscaDadosConfigSerial(configName,JFPrincipal.getIdentificador());        
            nova = conn.getSerialMaquina().trim().equals("");        
            conn.setSerialPortName(cmbPorta.getSelectedItem().toString());
            conn.setDataRate(Integer.parseInt(cmbBaudRate.getSelectedItem().toString()));
            conn.setDataBits(Integer.parseInt(cmbBitsDados.getSelectedItem().toString()));        
            conn.setStopBits(cmbBitParada.getSelectedIndex()+1);
            conn.setParity(cmbParidade.getSelectedIndex());
            conn.setFlowControl(cmbControleFluxo.getSelectedIndex());
            conn.setConfigName(configName);
            conn.setSerialMaquina(JFPrincipal.getIdentificador());
            conn.setTimeOut(1000);
            if(nova){
                regs = dao.adicionarNovaConfigSerial(conn);
            }else{
                regs = dao.atualizarConfigSerial(conn);     
            }
            if(regs){
                JOptionPane.showMessageDialog(rootPane,"Configuração atualizada com sucesso!","Configuração atualizada",JOptionPane.INFORMATION_MESSAGE);
                dispose();
            }else{
                JOptionPane.showMessageDialog(rootPane,"Falha ao atualizar os dados da configuração, por favor tente novamente.","Falha...",JOptionPane.ERROR_MESSAGE);
            }
        } catch (HeadlessException | NumberFormatException e) {
            erro.gravaErro(e);
        }
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jBManutencaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBManutencaoActionPerformed
        if(System.getProperty("os.name").equals("Linux")){
            try {
                Runtime.getRuntime().exec("sudo nice -n -19 java -jar /home/pipc/NetBeansProjects/TesteComunicaoSerial/dist/TesteComunicaoSerial.jar");
            } catch (IOException ex) {
                ex.printStackTrace();
                erro.gravaErro(ex);
            }
        }else{
            String args[] = null;
            TesteComunicaoSerial.main(args);
        }    
    }//GEN-LAST:event_jBManutencaoActionPerformed

    private void jBDesconectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDesconectarActionPerformed
        if(con.close()){
            System.out.println("Serial Interronpida: " + con.getSerialPortName());
            if(con.getAppName().equals(JFPrincipal.SERIAL_MICROMETRO)){
                JFPrincipal.serialMicrometro=false;
            }
            if(con.getAppName().equals(JFPrincipal.SERIAL_METRADOR)){
                JFPrincipal.serialMetrador = false;
            }
        }                                               
    }//GEN-LAST:event_jBDesconectarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbBaudRate;
    private javax.swing.JComboBox<String> cmbBitParada;
    private javax.swing.JComboBox<String> cmbBitsDados;
    private javax.swing.JComboBox<String> cmbControleFluxo;
    private javax.swing.JComboBox<String> cmbParidade;
    private javax.swing.JComboBox<String> cmbPorta;
    private javax.swing.JButton jBDesconectar;
    private javax.swing.JButton jBManutencao;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

    public void setConfigName(String configName) {
        this.configName = configName;
    }  
}
