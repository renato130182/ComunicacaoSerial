/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;



import Control.HardwareInfo;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import Serial.*;
import com.pi4j.io.gpio.GpioController;
import com.pi4j.io.gpio.GpioFactory;
import com.pi4j.io.gpio.GpioPinDigitalOutput;
import com.pi4j.io.gpio.OrangePiPin;
import com.pi4j.io.gpio.PinState;
import com.pi4j.platform.PlatformAlreadyAssignedException;
/**
 *
 * @author renato.soares
 */
public class FramePrincipal extends javax.swing.JFrame implements ActionListener{
    SerialTxRx serialPorts = new SerialTxRx();
    SerialTxRx conn;
    HardwareInfo hard;
    Protocolo.NazkomUDC1_default nazkomUdc1Default = new Protocolo.NazkomUDC1_default();
    Protocolo.NazcomUDC1_falhas nazkomUdc1Falhas = new Protocolo.NazcomUDC1_falhas();
    Protocolo.Zumbach_USYS10 zumbachUsys10 = new Protocolo.Zumbach_USYS10();
    double temp=20.0;
    private GpioPinDigitalOutput IN1 = null;
    private GpioPinDigitalOutput IN2 = null;
    private GpioPinDigitalOutput IN3 = null;
    private GpioPinDigitalOutput IN4 = null;
    /**
     * Creates new form FramePrincipal
     */
    public FramePrincipal() {
        try {
            initComponents();        
            CarregaPortasDisponiveis();
            if(System.getProperty("os.name").equals("Linux")){
                hard = new HardwareInfo();            
                hard.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        //System.out.println("temperatura: " + e.getActionCommand());
                        temp = (double)hard.getCpuTemperature()/1000;
                        System.out.println("temp: " + temp); 
                        AtualizaMostradorTemp();
                    }
                });
            }
        if(System.getProperty("os.name").equals("Linux")){
                     GpioController gpio = GpioFactory.getInstance();
                     this.IN1 = gpio.provisionDigitalOutputPin(OrangePiPin.GPIO_24,"Rele 01",PinState.HIGH);
                     this.IN2 = gpio.provisionDigitalOutputPin(OrangePiPin.GPIO_23,"Rele 02",PinState.HIGH);
                     this.IN3 = gpio.provisionDigitalOutputPin(OrangePiPin.GPIO_22,"Rele 03",PinState.HIGH);
                     this.IN4 = gpio.provisionDigitalOutputPin(OrangePiPin.GPIO_21,"Rele 04",PinState.HIGH);
                }    
        } catch (PlatformAlreadyAssignedException e) {
            e.printStackTrace();
        }                                         
    }
    
    private void AtualizaMostradorTemp(){
        try {
            radial4LcdTemp.setValueAnimated(temp);
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }
        
    private void CarregaPortasDisponiveis(){
        cmbPorta.removeAllItems();
        
        String portas[] = serialPorts.BuscarPortas();       
        for(int i=0;i<portas.length;i++){           
            if(portas[i]!=null){
                cmbPorta.addItem(portas[i]);
            }
        }
       if(cmbPorta.getItemCount()>0){
               HabilitarCamposConfiguracao();
        }else{
           DesabilitarCamposConfiguracao();
           BtnBuscarPortas.setEnabled(true);
           btnDesconectar.setEnabled(false);           
       }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cmbPorta = new javax.swing.JComboBox<>();
        cmbBaudRate = new javax.swing.JComboBox<>();
        cmbBitsDados = new javax.swing.JComboBox<>();
        cmbParidade = new javax.swing.JComboBox<>();
        cmbBitParada = new javax.swing.JComboBox<>();
        cmbControleFluxo = new javax.swing.JComboBox<>();
        BtnBuscarPortas = new javax.swing.JButton();
        btnConectar = new javax.swing.JButton();
        btnDesconectar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        lblStatusConexao = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPaneDadosSerial = new javax.swing.JTextPane();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cmbProtocolo = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtInformacao = new javax.swing.JTextArea();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        radial4LcdTemp = new eu.hansolo.steelseries.gauges.Radial4Lcd();
        jButtonReles = new javax.swing.JButton();
        jButtonRL1 = new javax.swing.JButton();
        jButtonRele2 = new javax.swing.JButton();
        jButtonRele3 = new javax.swing.JButton();
        jButtonRele4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Teste de comunicação serial");
        setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        setName("framePrincipal"); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Parametros da Comunicação");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Porta:");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Baud Rate:");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Bits de Dados:");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Paridade:");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Bits de Parada:");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Controle de Fluxo:");

        cmbBaudRate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "110", "300", "1200", "2400", "4800", "9600", "19200", "38400", "56700", "115200" }));

        cmbBitsDados.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "5", "6", "7", "8" }));
        cmbBitsDados.setSelectedIndex(3);

        cmbParidade.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nenhum", "Ímpar", "Par", "Marca", "Espaço" }));
        cmbParidade.setToolTipText("");

        cmbBitParada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "1.5" }));

        cmbControleFluxo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nenhum", "RTC/CTS in", "RTS/CTS out", "XON/XOFF in", "XON/XOFF out" }));
        cmbControleFluxo.setToolTipText("");

        BtnBuscarPortas.setText("Buscar Portas");
        BtnBuscarPortas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBuscarPortasActionPerformed(evt);
            }
        });

        btnConectar.setText("Conectar");
        btnConectar.setEnabled(false);
        btnConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConectarActionPerformed(evt);
            }
        });

        btnDesconectar.setText("Desconectar");
        btnDesconectar.setEnabled(false);
        btnDesconectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesconectarActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Status da coneção:");

        lblStatusConexao.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        lblStatusConexao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStatusConexao.setText("Desconectado");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbParidade, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbBitParada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbControleFluxo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(BtnBuscarPortas, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(btnConectar, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDesconectar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblStatusConexao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbPorta, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbBaudRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbBitsDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(cmbBaudRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(cmbBitsDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cmbParidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(cmbBitParada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(cmbControleFluxo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnBuscarPortas)
                    .addComponent(btnConectar)
                    .addComponent(btnDesconectar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStatusConexao, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(jLabel9)))
        );

        txtPaneDadosSerial.setEditable(false);
        txtPaneDadosSerial.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        txtPaneDadosSerial.setName(""); // NOI18N
        jScrollPane1.setViewportView(txtPaneDadosSerial);

        jLabel10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Dados da Serial:");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setText("Protocolo:");

        cmbProtocolo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nazkon UDC1 - Default", "Nazkon UDC1 -  Falhas", "Zumbach USYS10" }));
        cmbProtocolo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProtocoloActionPerformed(evt);
            }
        });

        txtInformacao.setColumns(20);
        txtInformacao.setRows(5);
        jScrollPane2.setViewportView(txtInformacao);

        jLabel12.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText("Informação tratada com protocolo:");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setName(""); // NOI18N

        radial4LcdTemp.setLcdDecimals(1);
        radial4LcdTemp.setMaxMeasuredValueVisible(true);
        radial4LcdTemp.setThreshold(35.0);
        radial4LcdTemp.setThresholdVisible(true);
        radial4LcdTemp.setTitle("Temp.");
        radial4LcdTemp.setUnitString("Cº");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radial4LcdTemp, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radial4LcdTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonReles.setText("Testar todos os reles");
        jButtonReles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRelesActionPerformed(evt);
            }
        });

        jButtonRL1.setText("RL1");
        jButtonRL1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRL1ActionPerformed(evt);
            }
        });

        jButtonRele2.setText("RL2");
        jButtonRele2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRele2ActionPerformed(evt);
            }
        });

        jButtonRele3.setText("RL3");
        jButtonRele3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRele3ActionPerformed(evt);
            }
        });

        jButtonRele4.setText("RL4");
        jButtonRele4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRele4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2)
                        .addComponent(jScrollPane1)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbProtocolo, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel12))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jButtonRL1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRele2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRele3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRele4))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonReles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonRL1)
                            .addComponent(jButtonRele2)
                            .addComponent(jButtonRele3)
                            .addComponent(jButtonRele4)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbProtocolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonReles))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BtnBuscarPortasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBuscarPortasActionPerformed
        // TODO add your handling code here:
        CarregaPortasDisponiveis();        
    }//GEN-LAST:event_BtnBuscarPortasActionPerformed

    private void btnDesconectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesconectarActionPerformed
        // TODO add your handling code here:
        if(conn.close()){
            lblStatusConexao.setText("Desconectado");
            lblStatusConexao.setForeground(Color.black);
            HabilitarCamposConfiguracao();
            btnDesconectar.setEnabled(false);
            conn=null;
        }else{
            lblStatusConexao.setText("Falha ao desconectar...");
            lblStatusConexao.setForeground(Color.red);
            DesabilitarCamposConfiguracao();
            btnDesconectar.setEnabled(true);
        }
    }//GEN-LAST:event_btnDesconectarActionPerformed

    private void btnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarActionPerformed
        // TODO add your handling code here:
        if(conn==null) conn = new SerialTxRx();
        parametrizarSerial();
        if(conn.iniciaSerial()){
            lblStatusConexao.setText("Conectado");
            lblStatusConexao.setForeground(Color.green);
            DesabilitarCamposConfiguracao();                        
            conn.addActionListener(this);
        }else{
            lblStatusConexao.setText("Falha ao estabelece conexão");
            lblStatusConexao.setForeground(Color.red);
            HabilitarCamposConfiguracao();
            
        }
                
    }//GEN-LAST:event_btnConectarActionPerformed

    private void cmbProtocoloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProtocoloActionPerformed
        // TODO add your handling code here:
        txtInformacao.setText("");
    }//GEN-LAST:event_cmbProtocoloActionPerformed

    private void jButtonRelesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRelesActionPerformed
        // TODO add your handling code here:
        if(System.getProperty("os.name").equals("Linux")){                            
                        System.out.println("Testar reles");
                        IN1.toggle();
                        IN2.toggle();
                        IN3.toggle();
                        IN4.toggle();
                        }
    }//GEN-LAST:event_jButtonRelesActionPerformed

    private void jButtonRL1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRL1ActionPerformed
        // TODO add your handling code here:
         if(System.getProperty("os.name").equals("Linux")){                            
                        System.out.println("Testar rele 1");
                        IN1.toggle();                        
                        }
    }//GEN-LAST:event_jButtonRL1ActionPerformed

    private void jButtonRele2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRele2ActionPerformed
        // TODO add your handling code here:
        if(System.getProperty("os.name").equals("Linux")){                            
                        System.out.println("Testar rele 2");
                        IN2.toggle();                        
                        }
    }//GEN-LAST:event_jButtonRele2ActionPerformed

    private void jButtonRele3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRele3ActionPerformed
        // TODO add your handling code here:
        if(System.getProperty("os.name").equals("Linux")){                            
                        System.out.println("Testar rele 3");
                        IN3.toggle();                        
                        }
    }//GEN-LAST:event_jButtonRele3ActionPerformed

    private void jButtonRele4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRele4ActionPerformed
        // TODO add your handling code here:
        if(System.getProperty("os.name").equals("Linux")){                            
                        System.out.println("Testar rele 4");
                        IN4.toggle();                        
                        }
    }//GEN-LAST:event_jButtonRele4ActionPerformed
    
    private void parametrizarSerial(){
         if(conn!=null){
            conn.setSerialPortName(cmbPorta.getSelectedItem().toString());
            conn.setDATA_RATE(Integer.parseInt(cmbBaudRate.getSelectedItem().toString()));
            conn.setDATA_BITS(Integer.parseInt(cmbBitsDados.getSelectedItem().toString()));        
            conn.setSTOP_BITS(cmbBitParada.getSelectedIndex()+1);
            conn.setPARITY(cmbParidade.getSelectedIndex());
            conn.setFLOW_CONTROL(cmbControleFluxo.getSelectedIndex());
        }
    }
    private void DesabilitarCamposConfiguracao(){
        cmbBaudRate.setEnabled(false);
        cmbBitParada.setEnabled(false);
        cmbBitsDados.setEnabled(false);
        cmbControleFluxo.setEnabled(false);
        cmbParidade.setEnabled(false);
        cmbPorta.setEnabled(false);       
        btnConectar.setEnabled(false);
        BtnBuscarPortas.setEnabled(false);
        btnDesconectar.setEnabled(true);
    }
    
    private void HabilitarCamposConfiguracao(){
        cmbBaudRate.setEnabled(true);
        cmbBitParada.setEnabled(true);
        cmbBitsDados.setEnabled(true);
        cmbControleFluxo.setEnabled(true);
        cmbParidade.setEnabled(true);
        cmbPorta.setEnabled(true);
        btnConectar.setEnabled(true);
        BtnBuscarPortas.setEnabled(true);
        btnDesconectar.setEnabled(false);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBuscarPortas;
    private javax.swing.JButton btnConectar;
    private javax.swing.JButton btnDesconectar;
    private javax.swing.JComboBox<String> cmbBaudRate;
    private javax.swing.JComboBox<String> cmbBitParada;
    private javax.swing.JComboBox<String> cmbBitsDados;
    private javax.swing.JComboBox<String> cmbControleFluxo;
    private javax.swing.JComboBox<String> cmbParidade;
    private javax.swing.JComboBox<String> cmbPorta;
    private javax.swing.JComboBox<String> cmbProtocolo;
    private javax.swing.JButton jButtonRL1;
    private javax.swing.JButton jButtonRele2;
    private javax.swing.JButton jButtonRele3;
    private javax.swing.JButton jButtonRele4;
    private javax.swing.JButton jButtonReles;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblStatusConexao;
    private eu.hansolo.steelseries.gauges.Radial4Lcd radial4LcdTemp;
    private javax.swing.JTextArea txtInformacao;
    private javax.swing.JTextPane txtPaneDadosSerial;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        
        if(true){
            System.out.println("Dados Serial : "+e.getActionCommand());
            txtPaneDadosSerial.setText(e.getActionCommand());
            switch (cmbProtocolo.getSelectedIndex()){
                case 0:                
                        ProtocoloNazcomUDC1Default(e.getActionCommand());
                        break;
                case 1:
                        ProtocoloNazcomUDC1Falha(e.getActionCommand());
                        break;
                case 2:
                        ProtocoloZumbach_USYS10(e.getActionCommand());
                        break; 
                default:
                    break;
            }
        }else{
            System.out.println("Tempretarura CPU: "+e.getActionCommand());
        }    
    }
    private void ProtocoloNazcomUDC1Default(String dadosRecebidos){
        nazkomUdc1Default.setLeituraSerial(dadosRecebidos);                
        txtInformacao.setText("Produto: " + nazkomUdc1Default.getProduto() + "\t" +
                "Maquina: " + nazkomUdc1Default.getMaquina() + "\t" +
                "Metragem: " + nazkomUdc1Default.getMetragem()+  "\n" +    
                "Data do Relatório: " + nazkomUdc1Default.getData()+ "\t" +                                
                "Hora da ultima Atualização: " + nazkomUdc1Default.getHora()+  "\n" +
                "Minimo Permitido: " + nazkomUdc1Default.getMinimoPermitido()+ "\t" +
                "Maximo Permitido: " + nazkomUdc1Default.getMaximoPernitido()+ "\n" +                        
                "Minimo da Amostragem: " + nazkomUdc1Default.getMinimo()+  "\t" +
                "Maximo da Amostragem: " + nazkomUdc1Default.getMaximo()+  "\t" +                                
                "Média da Amostragem: " + nazkomUdc1Default.getMedia()+  "\n" +
                "Desvio da Amostragem: " + nazkomUdc1Default.getDesvio()+  "\t" +
                "CTL da Amostragem: " + nazkomUdc1Default.getCtl()
                ); 
    }
    
    private void ProtocoloNazcomUDC1Falha(String dadosRecebidos){
        nazkomUdc1Falhas.setLeituraSerial(dadosRecebidos);
        txtInformacao.setText("Produto: " + nazkomUdc1Falhas.getProduto() + "\t" +
                "Maquina: " + nazkomUdc1Falhas.getMaquina() + "\t" +
                "Metragem: " + nazkomUdc1Falhas.getMetragem()+  "\n" +    
                "Data do Relatório: " + nazkomUdc1Falhas.getData()+ "\t" +                                
                "Hora da ultima Atualização: " + nazkomUdc1Falhas.getHora()+  "\n" +                      
                "Minimo da Amostragem: " + nazkomUdc1Falhas.getMinimo()+  "\t" +
                "Maximo da Amostragem: " + nazkomUdc1Falhas.getMaximo()+  "\t" +                                
                "Média da Amostragem: " + nazkomUdc1Falhas.getMedia()+  "\n" +
                "Desvio da Amostragem: " + nazkomUdc1Falhas.getDesvio()+  "\t" +
                "CTL da Amostragem: " + nazkomUdc1Falhas.getCtl()
                );
    }
    private void ProtocoloZumbach_USYS10(String dadosRecebidos){
        zumbachUsys10.setLeituraSerial(dadosRecebidos);                
        txtInformacao.setText("Order Number: " + zumbachUsys10.getOrderNumber() + "\t" +
                "Product Number: " + zumbachUsys10.getProductNumber() + "\t" +
                "Period Number: " + zumbachUsys10.getPeriodNumber()+  "\n" +    
                "Produced Length: " + zumbachUsys10.getProducedLenght()+ "\t" +                                
                "Events : " + zumbachUsys10.getEvents()+  "\n" +
                "Average: " + zumbachUsys10.getAverage()+ "\t" +
                "Maximum: " + zumbachUsys10.getMaximum()+ "\n" +                        
                "Minimum: " + zumbachUsys10.getMinimum()+  "\t" +
                "Standard Deviation: " + zumbachUsys10.getStandardDeviation()+  "\t" +                                
                "Max-Min Range: " + zumbachUsys10.getMaxMinRange()+  "\n" +
                "CpK: " + zumbachUsys10.getCpk()+  "\t"                 
                ); 
    }
    
}